xlab('') +
scale_y_continuous(TeX('Directional persistence (steps)'))+
coord_cartesian(ylim = c(0, 7))
panel_a <- (subpanel_1 + theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
subpanel_5+ theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())) /
(subpanel_3+ subpanel_4)
draw_traffic_flow <- function(edges = NULL, add = NULL, ...){
if(is.null(edges)){
edges <- compute_edges(hex[hex$y > 1000, ])
}
if(!is.null(add)){
pl <- add
} else {
pl <- ggplot()
}
pl <- pl + geom_segment(data = edges,
aes(x = x, xend = xend, y = y,
yend = yend), color = 'black',size = 2.9,
show.legend = FALSE, ...) +
geom_segment(data = edges,
aes(x = x, xend = xend, y = y,
yend = yend, color = z), size = 2.5, ...)
pl + xlab('') + ylab('') + theme(axis.text = element_blank(), axis.ticks = element_blank(),
axis.line = element_blank())
}
det_posits <- rbindlist(lapply(det, function(i){
data <- i@data[type != 'UNKNOWN']
data[['d']] <- get_segment(data[, c('Xmm', 'Ymm')])[, 2]
colnames(data)[colnames(data) == 'node'] <- 'o'
data
}), idcol = 'exp')
det_posits[['condition']] <- 'DET'
det_posits[['id']] <- apply(det_posits[, c('exp', 'N_ind')], 1, paste0, sep = '', collapse = '_')
det_density <- det_posits[, .(N = .N), by = c('type','o','d')][, z := rank(N)]
nf_posits <- rbindlist(lapply(nf, function(i){
do.call('gc', args = list(verbose = FALSE))
data <- i@data[type != 'UNKNOWN']
data[['d']] <- get_segment(data[, c('Xmm', 'Ymm')])[, 2]
colnames(data)[colnames(data) == 'node'] <- 'o'
data
}), idcol = 'exp')
nf_posits[['condition']] <- 'NFD'
nf_posits[['id']] <- apply(nf_posits[, c('exp', 'N_ind')], 1, paste0, sep = '', collapse = '_')
nf_density <- nf_posits[, .(N = .N), by = c('type','o','d')][, z := rank(N)]
nf_density
nf_density
draw_traffic_flow(nf_density, z = z)
draw_traffic_flow(nf_density)
draw_traffic_flow(merge(nf_density, edges))
save(nf_density, file = '~/research/gits/AnTracks/results/nf_density.RData')
save(det_density, file = '~/research/gits/AnTracks/results/det_density.RData')
traffic_flow <- merge(rbind(det_density, nf_density), edges)
save(traffic_det_nf, file = '~/research/gits/AnTracks/results/traffic_density.RData')
save(traffic_flow, file = '~/research/gits/AnTracks/results/traffic_density.RData')
draw_traffic_flow(traffic_flow, lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
facet_grid(type ~ condition)+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = maxd, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 24, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
draw_traffic_flow(traffic_flow, lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
facet_grid(type ~ condition)+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 200, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 24, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
nf_density
nf_density[['condition']] <- 'NFD'
det_density[['condition']] <- 'DET'
traffic_flow <- merge(rbind(det_density, nf_density), edges)
save(traffic_flow, file = '~/research/gits/AnTracks/results/traffic_density.RData')
save(det_density, file = '~/research/gits/AnTracks/results/det_density.RData')
save(nf_density, file = '~/research/gits/AnTracks/results/nf_density.RData')
draw_traffic_flow(traffic_flow, lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
facet_grid(type ~ condition)+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 200, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 24, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
traffic_flow
panel_c_1 <- draw_traffic_flow(traffic_flow[type == 'Scout' & condition == 'DET'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 200, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 24, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_1
panel_c_1 <- draw_traffic_flow(traffic_flow[type == 'Scout' & condition == 'DET'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 200, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_1
panel_c_4 <- draw_traffic_flow(traffic_flow[type == 'Recruit' & condition == 'NFD'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 200, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_3 <- draw_traffic_flow(traffic_flow[type == 'Scout' & condition == 'NFD'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 200, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_3 <- draw_traffic_flow(traffic_flow[type == 'Scout' & condition == 'NFD'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 350, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_4 <- draw_traffic_flow(traffic_flow[type == 'Recruit' & condition == 'NFD'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 350, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_2 <- draw_traffic_flow(traffic_flow[type == 'Recruit' & condition == 'DET'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 200, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_3 <- draw_traffic_flow(traffic_flow[type == 'Scout' & condition == 'NFD'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'grey60')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 350, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_4 <- draw_traffic_flow(traffic_flow[type == 'Recruit' & condition == 'NFD'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'grey60')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 350, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_4
traffic_flow[type == 'Recruit' & condition == 'NFD']
traffic_flow[type == 'Recruit' & condition == 'NFD' & N == 1]
panel_c_4 <- draw_traffic_flow(traffic_flow[type == 'Recruit' & condition == 'NFD' & N > 1], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'grey60')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 350, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_4
panel_c_4 <- draw_traffic_flow(traffic_flow[type == 'Recruit' & condition == 'NFD' & N > 10], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'grey60')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 350, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_4
traffic_flow[type == 'Recruit' & condition == 'NFD' & N > 10, min(N)]
panel_c_4 <- draw_traffic_flow(traffic_flow[type == 'Recruit' & condition == 'NFD' & N > 11], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'grey60')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 350, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_4
panel_c_3 <- draw_traffic_flow(traffic_flow[type == 'Scout' & condition == 'NFD'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'grey60')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15,
margin = margin(r = 5, l = 5)),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 350, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_3
panel_c_2
panel_c_1
svglite::svglite('/home/polfer/research/gits/AnTracks/plots/figures_LiquidBrains/panel_c_scouts_det.svg', pointsize = 30000)
panel_c_1
dev.off()
svglite::svglite('/home/polfer/research/gits/AnTracks/plots/figures_LiquidBrains/panel_c_scouts_det.svg', pointsize = 30000000000000000)
panel_c_1
dev.off()
svglite::svglite('/home/polfer/research/gits/AnTracks/plots/figures_LiquidBrains/panel_c_scouts_det.svg', pointsize = 500, width = 24, height = 13)
panel_c_1
dev.off()
panel_c_1 / panel_c_2 / panel_c_3 / panel_c_4
grid.arrange(panel_a, panel_c_1, panel_c_2, panel_c_3, panel_c_4,
layout_matrix = rbind(c(1, 2),
c(1, 3),
c(NA, 4),
c(NA, 5)))
panel_a
panel_c_1 <- draw_traffic_flow(traffic_flow[type == 'Scout' & condition == 'DET'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 200, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_2 <- draw_traffic_flow(traffic_flow[type == 'Recruit' & condition == 'DET'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'mediumpurple')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 200, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_3 <- draw_traffic_flow(traffic_flow[type == 'Scout' & condition == 'NFD'], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'grey60')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 350, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
panel_c_4 <- draw_traffic_flow(traffic_flow[type == 'Recruit' & condition == 'NFD' & N > 11], lineend = 'round',
add = draw_hexagons(linewidth = 1, color = 'grey80', lineend = 'round',
add = geom_foodpatches(fill = 'grey60')))+
scale_size_continuous(range = c(1, 5)) +
scico::scale_color_scico() + theme(legend.position = 'none',
strip.text.y = element_text(size = 15),
aspect.ratio = 0.5, plot.title = element_text(size =22))+
geom_circle(hex[hex$node == 634, c('x', 'y')],
r = 350, npoints = 500, linetype = 2, linewidth = 0.95) +
scale_y_continuous(limits = c(1000, 1950)) +
geom_point(shape = 23, data = hex[hex$node == 634, c('x', 'y')], aes(x, y-10),
fill = 'purple3', size = 4)
grid.arrange(panel_a, panel_c_1, panel_c_2, panel_c_3, panel_c_4,
layout_matrix = rbind(c(1, 1, 2, 2),
c(1, 1, 3, 3),
c(NA, NA, 4, 4),
c(NA, NA, 5, 5)))
panel_a <- (subpanel_1 + theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
subpanel_5+ theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())) /
(subpanel_3+ subpanel_4)
panel_a
## transformation of units
stats_mlt[variable == 'v', value := value / 10] # to cm/s
stats_mlt[variable == 'd', value := value / 10] # to cm
stats_mlt[variable == 't', value := value / 60] # to min
pairwise.wilcox.test(stats_mlt[variable == 'v', value],
stats_mlt[variable == 'v', interaction],
p.adjust.method = 'bonferroni')
subpanel_1 <- ggplot(data = stats_mlt[variable == 'v'],
aes(factor(type, levels = c('Scout', 'Recruit')),
value, fill = exp)) +
geom_boxplot(alpha = 0.6, outlier.shape = 1)+
annotate('text', x = 0.81 - 0.1, y = 2.25, label = 'a', size = 12) +
annotate('text', x = 1.19 - 0.1, y = 2.25, label = 'a', size = 12) +
annotate('text', x = 1.81 - 0.1, y = 2.25, label = 'b', size = 12) +
annotate('text', x = 2.19 - 0.1, y = 2.25, label = 'c', size = 12) +
scale_fill_manual('', labels = c('Experimental', 'Control'),
values = c('mediumpurple','gold3'))+
xlab('') +
scale_y_continuous(TeX("Velocity ($cm\\cdot s^{-1}$)"),
limits = c(0, NA))+
theme(legend.position = c(0.4, 0.8), # legend.position = c(0.15, 0.8),
legend.background = element_rect(color = 'white', fill = 'white'),
legend.justification = 'center', legend.title = element_blank(),
legend.text = element_text(size = 22),
legend.key.size = unit(1, 'cm'),
plot.title = element_text(size = 22))
pairwise.wilcox.test(stats_mlt[variable == 'd', value],
stats_mlt[variable == 'd', interaction],
p.adjust.method = 'bonferroni')
subpanel_3 <- ggplot(data = stats_mlt[variable == 'd'],
aes(factor(type, levels = c('Scout', 'Recruit')),
value, fill = exp)) +
geom_boxplot(alpha = 0.6, outlier.shape = 1, show.legend = FALSE)+
annotate('text', x = 0.81 - 0.1, y = 140, label = 'a', size = 12) +
annotate('text', x = 1.19 - 0.1, y = 140, label = 'b', size = 12) +
annotate('text', x = 1.81 - 0.1, y = 140, label = 'c', size = 12) +
annotate('text', x = 2.19 - 0.1, y = 140, label = 'c', size = 12) +
scale_fill_manual('', labels = c('Experimental', 'Control'),
values = c('mediumpurple','gold3'))+
xlab('') +
scale_y_continuous(TeX('Maximum distance (cm)'))+
theme(legend.position = c(0.15, 0.8),
legend.background = element_rect(color = 'black', fill = NA),
legend.justification = 'center', legend.title = element_blank(),
plot.title = element_text(size = 22))+
coord_cartesian(ylim = c(0, 150))
pairwise.wilcox.test(stats_mlt[variable == 't', value],
stats_mlt[variable == 't', interaction],
p.adjust.method = 'bonferroni')
subpanel_4 <- ggplot(data = stats_mlt[variable == 't'],
aes(factor(type, levels = c('Scout', 'Recruit')),
value, fill = exp)) +
geom_boxplot(alpha = 0.6, outlier.shape = 1, show.legend = FALSE)+
annotate('text', x = 0.81 - 0.1, y = 18, label = 'a', size = 12) +
annotate('text', x = 1.19 - 0.1, y = 18, label = 'b', size = 12) +
annotate('text', x = 1.81 - 0.1, y = 18, label = 'c', size = 12) +
annotate('text', x = 2.19 - 0.1, y = 18, label = 'c', size = 12) +
scale_fill_manual('', labels = c('Experimental', 'Control'),
values = c('mediumpurple','gold3'))+
xlab('') +
scale_y_continuous(TeX('Time (min)'))+
theme(legend.position = c(0.15, 0.8),
legend.background = element_rect(color = 'black', fill = NA),
legend.justification = 'center', legend.title = element_blank(),
plot.title = element_text(size = 22))+
coord_cartesian(ylim = c(0, 20))
subpanel_5 <- ggplot(data = data_pl,
aes(factor(type, levels = c('Scout', 'Recruit')),
pl, fill = condition)) +
geom_boxplot(alpha = 0.6, outlier.shape = 1, show.legend = FALSE)+
annotate('text', x = 0.81 - 0.1, y = 6, label = 'a', size = 12) +
annotate('text', x = 1.19 - 0.1, y = 6, label = 'b', size = 12) +
annotate('text', x = 1.81 - 0.1, y = 6, label = 'c', size = 12) +
annotate('text', x = 2.19 - 0.1, y = 6, label = 'd', size = 12) +
scale_fill_manual('', labels = c('Experimental', 'Control'),
values = c('mediumpurple','gold3'))+
xlab('') +
scale_y_continuous(TeX('Directional persistence (steps)'))+
coord_cartesian(ylim = c(0, 7))
panel_a <- (subpanel_1 + theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
subpanel_5+ theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())) /
(subpanel_3+ subpanel_4)
panel_a
grid.arrange(panel_a, panel_c_1, panel_c_2, panel_c_3, panel_c_4,
layout_matrix = rbind(c(1, 1, 2, 2),
c(1, 1, 3, 3),
c(NA, NA, 4, 4),
c(NA, NA, 5, 5)))
grid.arrange(panel_a, panel_c_1, panel_c_2, panel_c_3, panel_c_4,
layout_matrix = rbind(c(1, 1, 1, 1, 2, 2),
c(1, 1, 1, 1, 3, 3),
c(NA, NA, NA, NA, 4, 4),
c(NA, NA, NA, NA, 5, 5)))
rbind(c(1, 1, 1, 1, 2, 2),
c(1, 1, 1, 1, 3, 3),
c(NA, NA, NA, NA, 4, 4),
c(NA, NA, NA, NA, 5, 5))
ggarrange(panel_a, panel_c_1, panel_c_2, panel_c_3, panel_c_4)
grid.arrange(panel_a, panel_c_1, panel_c_2, panel_c_3, panel_c_4,
layout_matrix = rbind(c(1, 1, 1, 1, 2, 2),
c(1, 1, 1, 1, 2, 2),
c(1, 1, 1, 1, 3, 3),
c(1, 1, 1, 1, 3, 3),
c(NA, NA, NA, NA, 4, 4),
c(NA, NA, NA, NA, 4, 4),
c(NA, NA, NA, NA, 5, 5),
c(NA, NA, NA, NA, 5, 5)))
grid.arrange(ggarrange(subpanel_1, subpanel_5,
subpanel_3, subpanel_4), panel_c_1, panel_c_2, panel_c_3, panel_c_4,
layout_matrix = rbind(c(1, 1, 1, 1, 2, 2),
c(1, 1, 1, 1, 2, 2),
c(1, 1, 1, 1, 3, 3),
c(1, 1, 1, 1, 3, 3),
c(NA, NA, NA, NA, 4, 4),
c(NA, NA, NA, NA, 4, 4),
c(NA, NA, NA, NA, 5, 5),
c(NA, NA, NA, NA, 5, 5)))
grid.arrange(ggarrange(subpanel_1, subpanel_5,
subpanel_3, subpanel_4), panel_c_1, panel_c_2, panel_c_3, panel_c_4,
layout_matrix = rbind(c(1, 1, 2, 2),
c(1, 1, 2, 2),
c(1, 1, 3, 3),
c(1, 1,  3, 3),
c(NA, NA, 4, 4),
c(NA, NA, 4, 4),
c(NA, NA, 5, 5),
c(NA, NA, 5, 5)))
grid.arrange(ggarrange(subpanel_1+ theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()),
subpanel_5+ theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()),
subpanel_3, subpanel_4), panel_c_1, panel_c_2, panel_c_3, panel_c_4,
layout_matrix = rbind(c(1, 1, 2, 2),
c(1, 1, 2, 2),
c(1, 1, 3, 3),
c(1, 1,  3, 3),
c(NA, NA, 4, 4),
c(NA, NA, 4, 4),
c(NA, NA, 5, 5),
c(NA, NA, 5, 5)))
